# Constants for different parts of the move search
# Many of them are just to provide clarity, which is why there are four different constants for
# the number 1
class Chstr
  # flags for move types
  TYPES = ['quiet', 'castling', 'capture', 'en passant', 'pawn push', 'double pawn push']
  QUIET = 0
  CASTLE = 1
  CAPTURE = 2
  EP_CAPTURE = 3
  PAWN_PUSH = 4
  PAWN_DOUBLE_PUSH = 5
  # colors, squares, and pieces
  EMPTY = 6
  INVALID = -1
  PAWN = 0
  KNIGHT = 1
  BISHOP = 2
  ROOK = 3
  QUEEN = 4
  KING = 5
  WHITE = 0
  BLACK = 1
  # miscellaneous utlity
  INF = 99999
  LATE_GAME = 1
  MID_GAME = 0
  MAXPLY = 32
  QUEEN_INITIAL = [94, 24]
  KING_INITIAL = [95, 25]
  QSC =      [91, 21]
  KSC =      [98, 28]
  OTHER =    [1, 0]
  # move calculation
  FORWARD =  [-10, 10]
  SLIDING =  [ false, false, true, true, true, false ]
  STEPS =    [ 0, 8, 4, 4, 8, 8 ]
  N_STEPS =  [-21,-19,-12, -8,  8, 12, 19, 21]
  B_STEPS =  [-11, -9,  9, 11]
  R_STEPS =  [-10, -1,  1, 10]
  Q_STEPS =  [-11,-10, -9, -1,  1,  9, 10, 11]
  STEP = [
    [],
    [-21,-19,-12, -8,  8, 12, 19, 21],
    [-11, -9,  9, 11],
    [-10, -1,  1, 10],
    [-11,-10, -9, -1,  1,  9, 10, 11],
    [-11,-10, -9, -1,  1,  9, 10, 11]
  ]
  RAYS = [-9, 9, -11, 11, -10, 10, -1, 1]
  # evaluation
  MATERIAL = [ 100, 320, 330, 540, 960, 6400, 0, 0 ]
  MOBILITY = [
    -16, -12,  -8,  -4,   0,   4,   8,  12,  16,  20,
     24,  28,  32,  36,  40,  44,  48,  52,  56,  60,
     64,  68,  72,  76,  80,  84,  88,  92,  96, 100
   ]
  KING_THREAT = [
    32,  28,  24,  20,  16,  12,   8,   4,
     0,  -4,  -8, -12, -16, -20, -24, -28,
   -32, -36, -40, -44, -48, -52, -56, -60,
   -64, -68, -72, -76, -80, -84, -88, -92
  ]
  # fen utility
  INIT_FEN = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1"
  FEN_CASTLE = { 'K' => 98, 'Q' => 91, 'k' => 28, 'q' => 21
  }
  FEN_COLOR = { 'w' => 0, 'b' => 1 }
  FEN_SQUARES = [['P','N','B','R','Q','K'], ['p','n','b','r','q','k']]
  FILE = ['a','b','c','d','e','f','g','h']
  RANK = ['1','2','3','4','5','6','7','8']
  PIECES = ['','N','B','R','Q','K']
  UTF8 = [
    ['♙', '♘', '♗', '♖', '♕', '♔'],
    ['♟', '♞', '♝', '♜', '♛', '♚']]
  INIT = [
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
    -1, 6, 6, 6, 6, 6, 6, 6, 6,-1,
    -1, 6, 6, 6, 6, 6, 6, 6, 6,-1,
    -1, 6, 6, 6, 6, 6, 6, 6, 6,-1,
    -1, 6, 6, 6, 6, 6, 6, 6, 6,-1,
    -1, 6, 6, 6, 6, 6, 6, 6, 6,-1,
    -1, 6, 6, 6, 6, 6, 6, 6, 6,-1,
    -1, 6, 6, 6, 6, 6, 6, 6, 6,-1,
    -1, 6, 6, 6, 6, 6, 6, 6, 6,-1,
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1
  ]
  INIT_COLORS = [
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
    -1, 1, 1, 1, 1, 1, 1, 1, 1,-1,
    -1, 1, 1, 1, 1, 1, 1, 1, 1,-1,
    -1, 6, 6, 6, 6, 6, 6, 6, 6,-1,
    -1, 6, 6, 6, 6, 6, 6, 6, 6,-1,
    -1, 6, 6, 6, 6, 6, 6, 6, 6,-1,
    -1, 6, 6, 6, 6, 6, 6, 6, 6,-1,
    -1, 0, 0, 0, 0, 0, 0, 0, 0,-1,
    -1, 0, 0, 0, 0, 0, 0, 0, 0,-1,
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1
  ]
  INIT_SQUARES = [
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
    -1, 3, 1, 2, 4, 5, 2, 1, 3,-1,
    -1, 0, 0, 0, 0, 0, 0, 0, 0,-1,
    -1, 6, 6, 6, 6, 6, 6, 6, 6,-1,
    -1, 6, 6, 6, 6, 6, 6, 6, 6,-1,
    -1, 6, 6, 6, 6, 6, 6, 6, 6,-1,
    -1, 6, 6, 6, 6, 6, 6, 6, 6,-1,
    -1, 0, 0, 0, 0, 0, 0, 0, 0,-1,
    -1, 3, 1, 2, 4, 5, 2, 1, 3,-1,
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1
  ]

  CNTR = [
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
     0, 1, 1, 2, 3, 3, 2, 1, 1, 0,
     0, 1, 2, 3, 4, 4, 3, 2, 1, 0,
     0, 2, 3, 4, 5, 5, 4, 3, 2, 0,
     0, 3, 4, 5, 6, 6, 5, 4, 3, 0,
     0, 3, 4, 5, 6, 6, 5, 4, 3, 0,
     0, 2, 3, 4, 5, 5, 4, 3, 2, 0,
     0, 1, 2, 3, 4, 4, 3, 2, 1, 0,
     0, 1, 1, 2, 3, 3, 2, 1, 1, 0,
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0
  ]

  SQ_ID = [
    '..','..','..','..','..','..','..','..','..','..',
    '..','..','..','..','..','..','..','..','..','..',
    '..','a8','b8','c8','d8','e8','f8','g8','h8','..',
    '..','a7','b7','c7','d7','e7','f7','g7','h7','..',
    '..','a6','b6','c6','d6','e6','f6','g6','h6','..',
    '..','a5','b5','c5','d5','e5','f5','g5','h5','..',
    '..','a4','b4','c4','d4','e4','f4','g4','h4','..',
    '..','a3','b3','c3','d3','e3','f3','g3','h3','..',
    '..','a2','b2','c2','d2','e2','f2','g2','h2','..',
    '..','a1','b1','c1','d1','e1','f1','g1','h1','..',
    '..','..','..','..','..','..','..','..','..','..',
    '..','..','..','..','..','..','..','..','..','..'
  ]

  SQ = [
    21, 22, 23, 24, 25, 26, 27, 28,
  	31, 32, 33, 34, 35, 36, 37, 38,
  	41, 42, 43, 44, 45, 46, 47, 48,
  	51, 52, 53, 54, 55, 56, 57, 58,
  	61, 62, 63, 64, 65, 66, 67, 68,
  	71, 72, 73, 74, 75, 76, 77, 78,
  	81, 82, 83, 84, 85, 86, 87, 88,
  	91, 92, 93, 94, 95, 96, 97, 98
  ]

  SQRND = [
    [21, 22, 23, 24, 25, 26, 27, 28],
    [31, 32, 33, 34, 35, 36, 37, 38],
    [41, 42, 43, 44, 45, 46, 47, 48],
  	[51, 52, 53, 54, 55, 56, 57, 58],
  	[61, 62, 63, 64, 65, 66, 67, 68],
  	[71, 72, 73, 74, 75, 76, 77, 78],
  	[81, 82, 83, 84, 85, 86, 87, 88],
  	[91, 92, 93, 94, 95, 96, 97, 98]
  ]

  SQ120 = [
     [
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, 56, 57, 58, 59, 60, 61, 62, 63, -1,
    -1, 48, 49, 50, 51, 52, 53, 54, 55, -1,
    -1, 40, 41, 42, 43, 44, 45, 46, 47, -1,
    -1, 32, 33, 34, 35, 36, 37, 38, 39, -1,
    -1, 24, 25, 26, 27, 28, 29, 30, 31, -1,
    -1, 16, 17, 18, 19, 20, 21, 22, 23, -1,
    -1,  8,  9, 10, 11, 12, 13, 14, 15, -1,
    -1,  0,  1,  2,  3,  4,  5,  6,  7, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
  ], [
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1,  0,  1,  2,  3,  4,  5,  6,  7, -1,
    -1,  8,  9, 10, 11, 12, 13, 14, 15, -1,
    -1, 16, 17, 18, 19, 20, 21, 22, 23, -1,
    -1, 24, 25, 26, 27, 28, 29, 30, 31, -1,
    -1, 32, 33, 34, 35, 36, 37, 38, 39, -1,
    -1, 40, 41, 42, 43, 44, 45, 46, 47, -1,
    -1, 48, 49, 50, 51, 52, 53, 54, 55, -1,
    -1, 56, 57, 58, 59, 60, 61, 62, 63, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
    ]
  ]

  PST_MID = [
    [
      0,   0,   0,   0,   0,   0,   0,   0,
     16,  32,  -8, -16, -32,  -8,  32,  16,
     -8,  -8,   4,   0,   0,   4,  -8,  -8,
    -16,   4,  16,  32,  36,  16,   4, -16,
     16,  32,  48,  48,  54,  32,  32,  16,
     32,  48,  64,  64,  64,  64,  48,  32,
     48,  64,  64,  64,  64,  64,  64,  48,
     64,  64,  80,  80,  80,  80,  80,  80
   ], [
    -64, -32, -32, -16, -16, -32, -32, -64,
    -32, -16, -16,  -8,  -8, -16, -16, -32,
    -16,  -8,   0,   4,   4,   0,  -8, -16,
     -8,   0,   8,  16,  16,   8,   0,  -8,
     -8,   8,  16,  32,  32,  16,   8,  -8,
     -8,   8,  16,  32,  32,  16,   8,  -8,
    -16,  -8,   0,   8,   8,   0,  -8, -16,
   -128, -16, -16,  -8,  -8, -16, -16,-128
   ], [
     -4,  -8, -16,  -8,  -8, -16,  -8,  -4,
     -8,   4,   4,   8,   8,   4,   4,  -8,
     -8,   4,   8,  16,  16,   8,   4,  -8,
     -8,   0,  16,  16,  16,  16,   0,  -8,
     -8,   0,  16,  16,  16,  16,   0,  -8,
     -8,   0,   4,   4,   4,   4,   0,  -8,
     -8,   0,   0,   0,   0,   0,   0,  -8,
     -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8
   ], [
      0,   2,   4,   4,   4,   4,   2,   0,
     -8,  -4,  -2,   2,   2,  -2,  -4,  -8,
     -8,  -4,  -2,   2,   2,  -2,  -4,  -8,
     -8,  -4,  -2,   2,   2,  -2,  -4,  -8,
     -8,  -4,  -2,   2,   2,  -2,  -4,  -8,
     -8,  -4,  -2,   2,   2,  -2,  -4,  -8,
     16,  16,  16,  16,  16,  16,  16,  16,
      4,   4,   4,   4,   4,   4,   4,   4
   ], [
     -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0
   ], [
     32,  64,  32,  16,  16,  32,  64,  32,
     32,  24,  16,   0,   0,  16,  24,  32,
     16,   8,  -8, -16, -16,  -8,   8,  16,
      0,  -8, -16, -32, -32, -16,  -8,   0,
     -8, -16, -32, -48, -48, -32, -16,  -8,
    -16, -32, -48, -64, -64, -48, -32, -16,
    -32, -48, -64, -80, -80, -64, -48, -32,
    -48, -64, -80, -96, -96, -80, -64, -48
   ]
 ]

 PST_END = [
   [
      0,   0,   0,   0,   0,   0,   0,   0,
     -8,  -8, -16, -16, -16, -16,  -8,  -8,
      4,   0,  -4,  -8,  -8,  -4,   0,   4,
     16,   8,   4,  -4,  -4,   4,   8,  16,
     24,  16,   8,   4,   4,   8,  16,  24,
     32,  24,  16,  16,  16,  16,  24,  32,
     32,  32,  32,  32,  32,  32,  32,  32,
     64,  64,  64,  64,  64,  64,  64,  64
   ], [
    -32, -32, -16, -16, -16, -16, -32, -32,
    -32, -16, -16,  -8,  -8, -16, -16, -32,
    -16,  -8,   0,   4,   4,   0,  -8, -16,
     -8,  -4,   8,  16,  16,   8,  -4,  -8,
     -8,  -4,   8,  16,  16,   8,  -4,  -8,
    -16,  -8,   0,   4,   4,   0,  -8, -16,
    -32, -16, -16,  -8,  -8, -16, -16, -32,
    -32, -32, -16, -16, -16, -16, -32, -32
  ], [
    -16,  -8,  -4,  -4,  -4,  -4,  -8, -16,
     -8,  -4,   0,   4,   4,   0,  -4,  -8,
     -4,   0,   4,   8,   8,   4,   0,  -4,
     -4,   4,   8,  16,  16,   8,   4,  -4,
     -4,   4,   8,  16,  16,   8,   4,  -4,
     -4,   0,   4,   8,   8,   4,   0,  -4,
     -8,  -4,   0,   4,   4,   0,  -4,  -8,
    -16,  -8,  -4,  -4,  -4,  -4,  -8, -16
  ], [
     -4,  -2,   0,   2,   2,   0,  -2,  -4,
     -4,  -2,   0,   2,   2,   0,  -2,  -4,
     -4,  -2,   0,   2,   2,   0,  -2,  -4,
     -4,  -2,   0,   2,   2,   0,  -2,  -4,
     -4,  -2,   0,   2,   2,   0,  -2,  -4,
     -4,  -2,   0,   2,   2,   0,  -2,  -4,
     32,  32,  32,  32,  32,  32,  32,  32,
      8,   8,   8,   8,   8,   8,   8,   8
  ], [
    -32, -16,  -8,  -4,  -4,  -8, -16, -32,
    -16,  -8,  -4,   0,   0,  -4,  -8, -16,
     -8,  -4,   0,   4,   4,   0,  -4,  -8,
     -8,   0,   4,   8,   8,   4,   0,  -8,
     -8,   0,   4,   8,   8,   4,   0,  -8,
     -8,  -4,   0,   4,   4,   0,  -4,  -8,
    -16,  -8,  -4,   0,   0,  -4,  -8, -16,
    -32, -16,  -8,  -4,  -4,  -8, -16, -32
  ], [
    -64, -48, -32, -16, -16, -32, -48, -64,
    -48, -32, -16,  -8,  -8, -16, -32, -48,
    -32, -16,   8,   8,   8,   8, -16, -32,
    -16,  -8,   8,   8,   8,   8,  -8, -16,
    -16,  -8,   8,   8,   8,   8,  -8, -16,
    -32, -16,   8,   8,   8,   8, -16, -32,
    -48, -32, -16,  -8,  -8, -16, -32, -48,
    -64, -48, -32, -16, -16, -32, -48, -64
  ]
 ]

end
